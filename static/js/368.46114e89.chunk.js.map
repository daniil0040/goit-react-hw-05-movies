{"version":3,"file":"static/js/368.46114e89.chunk.js","mappings":"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","sources":["components/SingleMovieInfo/SingleMovieInfo.styled.jsx","components/SingleMovieInfo/SingleMovieInfo.jsx","pages/SingleMovie.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    \n`\nexport const MainInfoWrapper = styled.div`\n    display: flex;\n    gap: 30px;\n    margin-bottom:20px;\n    padding:10px 0px;\n    border-bottom: 1px solid black;\n    border-top: 1px solid black;\n    padding-left: 20px;\n`\nexport const Name = styled.h2`\n    margin-bottom:15px;\n`\nexport const Text = styled.p`\n    margin-top: 15px;\n    margin-bottom: 15px;\n`\nexport const BtnList = styled.ul`\n    padding-left: 20px;\n    display: flex;\n    gap: 10px;\n`\nexport const BackBtn = styled.button`\n    margin-left: 20px;\n    margin-bottom: 15px;\n`","import { NavLink, Outlet} from \"react-router-dom\"\nimport { BtnList, MainInfoWrapper, Name, Text, Wrapper } from \"./SingleMovieInfo.styled\"\n\nexport const SingleMovieInfo = ({movie}) => {\n\n    return (<Wrapper>\n        <MainInfoWrapper>\n        <div>\n            <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\n        </div>\n        <div>\n                <Name>{movie.original_title ?? movie.original_name}</Name>\n                <Text>{`User rating: ${movie.vote_average}`}</Text>\n                <h3>Overview</h3>\n                <Text>{movie.overview}</Text>\n                <h3>Genres</h3>\n                <Text>{movie.genres.map(({name}) => {\n                    return name\n                }).join(\",\")}</Text>\n        </div>\n        </MainInfoWrapper>\n                <BtnList>\n            <li>\n                <button>\n                    <NavLink to='cast'>Cast</NavLink>\n                    </button>\n                    </li>\n            <li>\n                <button>\n                    <NavLink to='reviews'>Reviews</NavLink>\n                    </button>\n                    </li>\n                </BtnList>\n                <Outlet/>\n    </Wrapper>)\n}","import { getMovieById } from \"api\"\nimport { SingleMovieInfo } from \"components/SingleMovieInfo/SingleMovieInfo\"\nimport { BackBtn } from \"components/SingleMovieInfo/SingleMovieInfo.styled\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link, useLocation, useParams } from \"react-router-dom\"\n\nexport default function SingleMovie() {\n    const [movie, setMovie] = useState()\n    const [error, setError] = useState(false)\n    const [loading,setLoading]=useState(false)\n    const params = useParams()\n    const location = useLocation()\n    const backLinkLocationRef = useRef(location.state?.from ?? \"/movies\")\n    useEffect(() => {\n            const controller = new AbortController()\n            async function getMovie() {\n                try {\n            setLoading(true)\n            const fetchedMovie = await getMovieById(params.movieId,controller)\n            setMovie(fetchedMovie)\n        } catch (error) {\n            if (error.code !== \"ERR_CANCELED\") {\n                setError(true)\n            }\n                } finally {\n                    setLoading(false)\n        }\n    }\n        getMovie()\n        return () => {\n            controller.abort()\n        }\n        }, [params.movieId])\n    \n    return (\n        <main>\n            {loading && <div>Loading...</div>}\n            {error && <div>Something went wrong...Try reload page!</div>}\n            <BackBtn><Link to={backLinkLocationRef.current}>Go back</Link></BackBtn>\n            {movie && <SingleMovieInfo movie={movie} />}\n    </main>\n        )\n}"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","MainInfoWrapper","_templateObject2","Name","_templateObject3","Text","_templateObject4","BtnList","_templateObject5","BackBtn","_templateObject6","SingleMovieInfo","_ref","_movie$original_title","movie","_jsxs","children","_jsx","src","concat","poster_path","alt","original_title","original_name","vote_average","overview","genres","map","_ref2","name","join","NavLink","to","Outlet","SingleMovie","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","params","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","controller","AbortController","_getMovie","_asyncToGenerator","_regeneratorRuntime","_callee","fetchedMovie","_context","prev","next","getMovieById","movieId","sent","t0","code","finish","stop","apply","arguments","getMovie","abort","Link","current"],"sourceRoot":""}