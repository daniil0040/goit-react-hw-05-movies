{"version":3,"file":"static/js/672.f9101ff5.chunk.js","mappings":"sNAEaA,EAAoBC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4QAY7BC,EAAwBH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6S,oECZjCG,E,OAA4BL,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8K,6ICCrCI,EAAiB,SAAHC,GAAmB,IAADC,EAAZC,EAAKF,EAALE,MAE7B,OADJC,QAAQC,IAAIF,IACDG,EAAAA,EAAAA,KAAA,OAAAC,UACHD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaP,EAAMQ,IAAKJ,UAC5BK,EAAAA,EAAAA,MAAA,OAAAL,SAAA,EACAD,EAAAA,EAAAA,KAAA,OAAKO,IAAG,kCAAAH,OAAoCP,EAAMW,aAAeC,IAAI,MACjET,EAAAA,EAAAA,KAACP,EAAAA,EAAyB,CAAAQ,SAAsB,QAAtBL,EAAEC,EAAMa,sBAAc,IAAAd,EAAAA,EAAIC,EAAMc,sBAI1E,E,QCVaC,EAAa,SAAHjB,GAAkB,IAAbkB,EAAMlB,EAANkB,OACxB,OAAOb,EAAAA,EAAAA,KAAA,OAAAC,UACHD,EAAAA,EAAAA,KAACb,EAAAA,EAAiB,CAAAc,SACTY,EAAOC,KAAI,SAACjB,GACT,OAAQG,EAAAA,EAAAA,KAACT,EAAAA,EAAqB,CAAAU,UAC9BD,EAAAA,EAAAA,KAACN,EAAc,CAACG,MAAOA,KADaA,EAAMQ,GAGlD,OAGZ,E,SCTe,SAASU,IACpB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAUF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAC1BG,GAA2BT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAnCE,EAAOD,EAAA,GAACE,EAAUF,EAAA,GAuBzB,OArBAG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAa,IAAIC,gBACC,SAAAC,IAYvB,OAZuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAvB,EAAA,OAAAsB,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEyB,OAFzBF,EAAAC,KAAA,EAEST,GAAW,GAAKQ,EAAAE,KAAA,GACKC,EAAAA,EAAAA,IAAkBT,GAAW,OAA5ClB,EAAMwB,EAAAI,KACjBpB,EAAUR,EAAO6B,SAAQL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEN,iBAAfA,EAAAM,GAAMC,MACNnB,GAAS,GACZ,QAEwB,OAFxBY,EAAAC,KAAA,GAEOT,GAAW,GAAMQ,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAV,EAAA,yBAE5BW,MAAA,KAAAC,UAAA,CAED,OAfwC,WAChBf,EAAAc,MAAC,KAADC,UAAA,CAaxBC,GACO,WACHlB,EAAWmB,OACf,CACJ,GAAG,KAEI5C,EAAAA,EAAAA,MAAA,QAAAL,SAAA,CACF2B,IAAW5B,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eACZuB,IAASxB,EAAAA,EAAAA,KAAA,OAAAC,SAAK,6CACnBD,EAAAA,EAAAA,KAACY,EAAU,CAACC,OAASO,MAE7B,C","sources":["components/AllPagesMoviesList.styled.jsx","components/AllPagesMoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MoviesGalleryList = styled.ul`\n    display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`\nexport const MoviesGalleryListItem = styled.li`\nposition: relative;\n      border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    &:hover{\n    transform: scale(1.03);\n    }\n`","import styled from \"styled-components\";\n\nexport const MoviesListItemTextContent = styled.h2`\nwidth: 100%;\ndisplay: flex;\njustify-content: center;\n    position: absolute;\n    background-color: rgb(253, 245, 230,0.5);\n    bottom: 0px;\n    color: black;\n`","import { Link } from \"react-router-dom\"\nimport { MoviesListItemTextContent } from \"../AllPagesMoviesListItem.styled\";\n\nexport const MoviesListItem = ({ movie }) => {\nconsole.log(movie);\n    return <div>\n        <Link to={`/movies/${movie.id}`}>\n            <div>\n            <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt=\"\" />\n                <MoviesListItemTextContent>{movie.original_title ?? movie.original_name}</MoviesListItemTextContent>\n                </div>\n        </Link>\n    </div>\n}","import { MoviesListItem } from \"../MoviesListItem/MoviesListItem\"\nimport { MoviesGalleryList, MoviesGalleryListItem } from \"../AllPagesMoviesList.styled\"\n\nexport const MoviesList = ({movies}) => {\n    return <div>\n        <MoviesGalleryList>\n                {movies.map((movie) => {\n                    return (<MoviesGalleryListItem key={movie.id}>\n                    <MoviesListItem movie={movie} />\n                        </MoviesGalleryListItem>)\n            })}\n        </MoviesGalleryList>\n    </div>\n}","import { allTrendingMovies } from \"api\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\n\nexport default function Home() {\n    const [movieItems, setMovies] = useState([]);\n        const [error, setError] = useState(false)\n    const [loading,setLoading]=useState(false)\n\n    useEffect(() => {\n        const controller = new AbortController()\n        async function getMovies() {\n            try {\n                 setLoading(true)\n                 const movies = await allTrendingMovies(controller)\n            setMovies(movies.results)\n        } catch (error) {\n            if (error.code !== \"ERR_CANCELED\") {\n                setError(true)\n            }\n        }finally {\n                    setLoading(false)\n        }\n        }\n        getMovies()\n        return () => {\n            controller.abort();\n        }\n    }, [])\n\n    return <main>\n        {loading && <div>Loading...</div>}\n            {error && <div>Something went wrong...Try reload page!</div>}\n        <MoviesList movies={ movieItems} />\n    </main>\n}"],"names":["MoviesGalleryList","styled","_templateObject","_taggedTemplateLiteral","MoviesGalleryListItem","_templateObject2","MoviesListItemTextContent","MoviesListItem","_ref","_movie$original_title","movie","console","log","_jsx","children","Link","to","concat","id","_jsxs","src","poster_path","alt","original_title","original_name","MoviesList","movies","map","Home","_useState","useState","_useState2","_slicedToArray","movieItems","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","useEffect","controller","AbortController","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","allTrendingMovies","sent","results","t0","code","finish","stop","apply","arguments","getMovies","abort"],"sourceRoot":""}